View(twentyfour)
View(twentythree)
View(twentytwo)
View(uploaded)
uploaded_trim <- subset(uploaded, select = -c("Lat", "Lon", "Platform_ID", "Time_PST"))
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST))
View(uploaded_trim)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC))
gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y/%m/%d %H:%M:%OS")
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
str(uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
str(uploaded_trim$ISO_DateTime_PST)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
uploaded_trim$Datetime <- uploaded_trim$ISO_DateTime_PST
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST, Datetime))
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
names(uploaded_trim)[names(uploaded_trim) == 'ISO_DateTime_PST'] <- 'Datetime'
twentyfour_clean <- subset(twentyfour, select = -c(Time))
twentythree_clean <- subset(twentythree, select = -c(Time))
View(twentythree_clean)
View(twentyfour_clean)
twentytwo$datetime <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo$Date <- as.POSIXct.Date(twentytwo$Date)
twentytwo$Date <- as.POSIXct(twentytwo$Date)
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- as.POSIXct(twentytwo$Time, format = "%H%M%S")
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- strptime(twentytwo$Time, format = "%H%M%S")
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- chron(times = twentytwo$Time)
library(chron)
install.packages("chron")
library(chron)
twentytwo$Time <- chron(times = twentytwo$Time)
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$datetime <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Datetime <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Date, Time))
View(twentytwo_clean)
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
View(twentytwo)
twentytwo_clean <- subset(twentytwo, select = -c(Time))
View(twentytwo_clean)
twentyfour_clean$Year <- format(Date, format="%Y")
twentyfour_clean$Year <- format(twentyfour$Date, format="%Y")
twentyfour_clean <- twentyfour_clean %>%
select(Year, everything())
twentyfour_clean$Month <- format(twentyfour$Date, format="%m")
twentyfour_clean <- twentyfour_clean %>%
select(Year, Month, everything())
twentyfour_clean$Year <- format(twentyfour_clean$Date, format="%Y")
twentyfour_clean$Month <- format(twentyfour_clean$Date, format="%m")
twentyfour_clean <- twentyfour_clean %>%
select(Year, Month, everything())
twentythree_clean$Year <- format(twentythree_clean$Date, format="%Y")
twentythree_clean$Month <- format(twentythree_clean$Date, format="%m")
twentythree_clean <- twentythree_clean %>%
select(Year, Month, everything())
names(uploaded_trim)[names(uploaded_trim) == 'Datetime'] <- 'Date'
uploaded_trim$Month <- format(uploaded_trim$Date, format="%m")
uploaded_trim <- uploaded_trim %>%
select(Year, Month, everything())
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
names(uploaded_trim)[names(uploaded_trim) == 'ISO_DateTime_PST'] <- 'Date'
uploaded_trim$Month <- format(uploaded_trim$Date, format="%m")
uploaded_trim <- uploaded_trim %>%
select(Year, Month, everything())
rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
twentytwo_clean$Year <- format(twentytwo_clean$Date, format="%Y")
twentytwo_clean$Month <- format(twentytwo_clean$Date, format="%m")
twentytwo_clean <- twentytwo_clean %>%
select(Year, Month, everything())
rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST, Rad_tot))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
uploaded_trim$Month <- format(uploaded_trim$Date, format="%m")
uploaded_trim <- uploaded_trim %>%
select(Year, Month, everything())
rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
View(uploaded_trim)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST, Rad_tot))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
names(uploaded_trim)[names(uploaded_trim) == 'ISO_DateTime_PST'] <- 'Date'
uploaded_trim$Month <- format(uploaded_trim$Date, format="%m")
uploaded_trim <- uploaded_trim %>%
select(Year, Month, everything())
rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
View(weather)
weather$Month <- format(weather$Date, format="%m")
weather$Year <- format(weather$Date, format="%Y")
View(twentytwo)
View(twentyfour)
View(twentythree)
uploaded_trim <- subset(uploaded, select = -c(Lat, Lon, Platform_ID, Time_PST, ISO_DateTime_UTC, Date_PST, Rad_tot))
uploaded_trim$ISO_DateTime_PST <- gsub("T", " ", uploaded_trim$ISO_DateTime_PST)
uploaded_trim$ISO_DateTime_PST <- as.POSIXct(uploaded_trim$ISO_DateTime_PST, format = "%Y-%m-%d %H:%M:%OS")
names(uploaded_trim)[names(uploaded_trim) == 'ISO_DateTime_PST'] <- 'Date'
twentyfour_clean <- subset(twentyfour, select = -c(Time))
twentythree_clean <- subset(twentythree, select = -c(Time))
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
twentyfour_clean$Year <- format(twentyfour_clean$Date, format="%Y")
twentyfour_clean$Month <- format(twentyfour_clean$Date, format="%m")
twentyfour_clean <- twentyfour_clean %>%
select(Year, Month, everything())
twentythree_clean$Year <- format(twentythree_clean$Date, format="%Y")
twentythree_clean$Month <- format(twentythree_clean$Date, format="%m")
twentythree_clean <- twentythree_clean %>%
select(Year, Month, everything())
twentytwo_clean$Year <- format(twentytwo_clean$Date, format="%Y")
twentytwo_clean$Month <- format(twentytwo_clean$Date, format="%m")
twentytwo_clean <- twentytwo_clean %>%
select(Year, Month, everything())
uploaded_trim$Month <- format(uploaded_trim$Date, format="%m")
uploaded_trim <- uploaded_trim %>%
select(Year, Month, everything())
twentytwo <- read_xlsx("data/2022.xlsx")
library(ggplot2)
View(twentyfour)
duplicates <- twentyfour$Date[duplicated(Date)]
duplicates <- twentyfour[duplicated(twentyfour$Date),]
View(duplicates)
weather$Date <- unique(weather$Date)
unique_times <- unique(weather$Date)
weather <- data.frame(Date = unique_times)
start_date <- as.Date("2022-01-01")
end_date <- as.Date("2022-12-31")  # Adjust this as needed
dates <- seq(start_date, end_date, by = "day")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
dates <- seq(as.Date("2022-01-01"), as.Date("2022-12-31"), by = "day")
times_repeated <- rep(twentytwo$Time, length(dates))
dates_repeated <- rep(dates, each = length(twentytwo$Time))
datetimes <- paste(dates_repeated, times_repeated)
datetimes <- as.POSIXct(datetimes, format = "%Y-%m-%d %H:%M:%S")
datetimes <- paste(dates_repeated, twentytwo$Time)
head(datetimes)
tail(datetimes)
twentytwo <- read_xlsx("data/2022.xlsx")
length(twentytwo$Time)
ggplot(twentytwo_clean, aes(x=Date, y=Air_Temp))
ggplot(twentytwo_clean, aes(x=Date, y=Air_Temp))+
geom_point()
ggplot(twentytwo_clean, aes(x=Date, y=Wind_Chill))+
geom_point()
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
# Assuming your dataset is a data frame with a datetime column named 'Date'
twentytwo_clean$Date <- as.POSIXct(twentytwo_clean$Date, format = "%Y-%m-%d %H:%M:%S")
# Check where times are "00:00:00" but the date is still the same
problem_rows <- which(format(twentytwo_clean$Date, "%H:%M:%S") == "00:00:00" &
as.integer(format(twentytwo_clean$Date, "%H")) == 0)
# Assuming your dataset is a data frame with a datetime column named 'Date'
twentytwo_clean$Date <- as.POSIXct(twentytwo_clean$Date, format = "%Y-%m-%d %H:%M:%S")
# Check where times are "00:00:00" but the date is still the same
problem_rows <- which(format(twentytwo_clean$Date, "%H:%M:%S") == "00:00:00" &
as.integer(format(twentytwo_clean$Date, "%H")) == 0)
# Loop over rows to adjust the datetime
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "01:00:00") {
# Adjust the date of the current row to the next day's date
twentytwo_clean$Date[i] <- twentytwo_clean$Date[i] + 86400  # Add one day (86400 seconds)
}
}
twentytwo_clean$Date <- as.POSIXct(twentytwo_clean$Date, format = "%Y-%m-%d %H:%M:%S")
# Loop over rows to adjust the datetime, checking for NA values
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "01:00:00") {
# Adjust the date of the current row to the next day's date
twentytwo_clean$Date[i] <- twentytwo_clean$Date[i] + 86400  # Add one day (86400 seconds)
}
}
# Check the adjusted datetimes
head(twentytwo_clean$Date)
tail(twentytwo_clean$Date)
# Optional: Check for missing times
missing_times <- setdiff(seq(min(twentytwo_clean$Date), max(twentytwo_clean$Date), by = "15 min"), twentytwo_clean$Date)
# Loop over rows to adjust the datetime, checking for NA values
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00") {
# Adjust the date of the next row to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400  # Add one day (86400 seconds)
}
}
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00") &&
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) {
# Adjust the date of the next row to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400  # Add one day (86400 seconds)
}
}
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) {
# Adjust the date of the next row to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400
twentytwo_clean$Date[i + 2] <- twentytwo_clean$Date[i + 2] + 86400
twentytwo_clean$Date[i + 3] <- twentytwo_clean$Date[i + 3] + 86400
twentytwo_clean$Date[i + 4] <- twentytwo_clean$Date[i + 4] + 86400# Add one day (86400 seconds)
}
}
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) {
# Adjust the date of the next row to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400
twentytwo_clean$Date[i + 2] <- twentytwo_clean$Date[i + 2] + 86400
twentytwo_clean$Date[i + 3] <- twentytwo_clean$Date[i + 3] + 86400
twentytwo_clean$Date[i + 4] <- twentytwo_clean$Date[i + 4] + 86400# Add one day (86400 seconds)
}
}
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) {
# Adjust the date of the next row to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400
twentytwo_clean$Date[i + 2] <- twentytwo_clean$Date[i + 2] + 86400
twentytwo_clean$Date[i + 3] <- twentytwo_clean$Date[i + 3] + 86400
twentytwo_clean$Date[i + 4] <- twentytwo_clean$Date[i + 4] + 86400# Add one day (86400 seconds)
}
}
twentytwo <- read_xlsx("data/2022.xlsx")
twentytwo$Date <- as.POSIXct(twentytwo$Date, format = "%Y%m%d")
twentytwo$Time <- format(as.POSIXlt(twentytwo$Time, format="%H%M%S"),"%H:%M:%S")
twentytwo$Date <- as.POSIXct(paste(twentytwo$Date, twentytwo$Time), format="%Y-%m-%d %H:%M:%S")
twentytwo_clean <- subset(twentytwo, select = -c(Time))
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) or format(twentytwo_clean$Date[i + 1], "%m-%d") == "11-30")
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if (format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) ||
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if ((format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) ||
(format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m-%d") == "11-30")
{
for (i in 1:(length(twentytwo_clean$Date) - 1)) {
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "00:00:00" and previous datetime being at "23:45:00"
if ((format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == 12) ||
(format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m-%d") == "11-30"){
for (i in 1:(length(twentytwo_clean$Date) - 4)) {  # Changed to `-4` so you don't go out of bounds
# Skip rows where Date is NA
if (is.na(twentytwo_clean$Date[i]) | is.na(twentytwo_clean$Date[i + 1])) {
next  # Skip this iteration if there's an NA value
}
# Check for "23:45:00" and the next datetime being at "00:00:00" and additional conditions
if ((format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m") == "12") ||
(format(twentytwo_clean$Date[i], "%H:%M:%S") == "23:45:00" &&
format(twentytwo_clean$Date[i + 1], "%H:%M:%S") == "00:00:00" &&
format(twentytwo_clean$Date[i + 1], "%m-%d") == "11-30")) {
# Adjust the date of the next few rows to the current day's date
twentytwo_clean$Date[i + 1] <- twentytwo_clean$Date[i + 1] + 86400  # Add one day (86400 seconds)
twentytwo_clean$Date[i + 2] <- twentytwo_clean$Date[i + 2] + 86400
twentytwo_clean$Date[i + 3] <- twentytwo_clean$Date[i + 3] + 86400
twentytwo_clean$Date[i + 4] <- twentytwo_clean$Date[i + 4] + 86400  # Add one day (86400 seconds)
}
}
missing_times <- setdiff(seq(min(twentytwo_clean$Date), max(twentytwo_clean$Date), by = "15 min"), twentytwo_clean$Date)
missing_times <- setdiff(seq(min(twentytwo_clean$Date), max(twentytwo_clean$Date), by = "15 min"), twentytwo_clean$Date)
ggplot(twentytwo_clean, aes(x=Date, y=Wind_Chill))+
geom_point()
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
twentytwo_clean$Year <- format(twentytwo_clean$Date, format="%Y")
twentytwo_clean$Month <- format(twentytwo_clean$Date, format="%m")
twentytwo_clean <- twentytwo_clean %>%
select(Year, Month, everything())
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
unique_times <- unique(weather$Date)
weather <- data.frame(Date = unique_times)
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
unique_times <- unique(weather$Date)
weather <- data.frame(Date = unique_times)
unique_times <- unique(weather$Date)
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
unique_times <- unique(weather$Date)
weather$Month <- format(weather$Date, format="%m")
weather$Year <- format(weather$Date, format="%Y")
weather_clean_unique <- weather[!duplicated(weather$Date), ]
View(weather_clean_unique)
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
View(twentyfour_clean)
View(twentytwo_clean)
View(twentyfour_clean)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
weather <- rbind(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
colnames(uploaded_trim)
colnames(twentytwo_clean)
colnames(twentythree_clean)
colnames(twentyfour_clean)
nrow(uploaded_trim)
nrow(twentytwo_clean)
nrow(twentythree_clean)
nrow(twentyfour_clean)
View(weather)
tail(weather)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
# Convert Year column to character in all dataframes
uploaded_trim$Year <- as.character(uploaded_trim$Year)
twentytwo_clean$Year <- as.character(twentytwo_clean$Year)
twentythree_clean$Year <- as.character(twentythree_clean$Year)
twentyfour_clean$Year <- as.character(twentyfour_clean$Year)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
# Convert Rad_PAR column to numeric (double) in all dataframes
uploaded_trim$Rad_PAR <- as.numeric(uploaded_trim$Rad_PAR)
twentytwo_clean$Rad_PAR <- as.numeric(twentytwo_clean$Rad_PAR)
twentythree_clean$Rad_PAR <- as.numeric(twentythree_clean$Rad_PAR)
twentyfour_clean$Rad_PAR <- as.numeric(twentyfour_clean$Rad_PAR)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
# Convert Rad_Energy column to numeric (double) in all dataframes
uploaded_trim$Rad_Energy <- as.numeric(uploaded_trim$Rad_Energy)
twentytwo_clean$Rad_Energy <- as.numeric(twentytwo_clean$Rad_Energy)
twentythree_clean$Rad_Energy <- as.numeric(twentythree_clean$Rad_Energy)
twentyfour_clean$Rad_Energy <- as.numeric(twentyfour_clean$Rad_Energy)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
# Convert Wind_speed column to numeric (double) in all dataframes
uploaded_trim$Wind_speed <- as.numeric(uploaded_trim$Wind_speed)
twentytwo_clean$Wind_speed <- as.numeric(twentytwo_clean$Wind_speed)
twentythree_clean$Wind_speed <- as.numeric(twentythree_clean$Wind_speed)
twentyfour_clean$Wind_speed <- as.numeric(twentyfour_clean$Wind_speed)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
uploaded_trim$Wind_Chill <- as.numeric(uploaded_trim$Wind_Chill)
twentytwo_clean$Wind_Chill <- as.numeric(twentytwo_clean$Wind_Chill)
twentythree_clean$Wind_Chill <- as.numeric(twentythree_clean$Wind_Chill)
twentyfour_clean$Wind_Chill <- as.numeric(twentyfour_clean$Wind_Chill)
weather <- bind_rows(uploaded_trim, twentytwo_clean, twentythree_clean, twentyfour_clean)
weather_clean_unique <- weather[!duplicated(weather$Date), ]
View(weather_clean_unique)
View(weather)
View(weather_clean_unique)
weather_clean_unique <- weather[!duplicated(weather$Date), ]
ggplot(weather_clean_unique, aes(x=Year, y= Air_Temp))+
geom_violin()
ggplot(weather_clean_unique, aes(x=Year, y= Air_Temp))+
geom_violin()+
theme_classic()
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill))+
geom_violin()+
theme_classic()
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
xlab("Wind Chill (°C)")
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
xlab("Wind Chill (°C)")
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
ylab("Wind Chill (°C)")
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
ylab("Wind Chill (°C)")+
geom_hline(y = 10)
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
ylab("Wind Chill (°C)")+
geom_hline(yintercept = 10)
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
ylab("Wind Chill (°C)")+
geom_hline(yintercept = 10)+
theme(axis.title = element_text(size=20, color = "black"),
axis.text = element_text(size=20, color = "black"))
ggplot(weather_clean_unique, aes(x=Year, y= Wind_Chill, fill = Year))+
geom_violin()+
theme_classic()+
ylab("Wind Chill (°C)")+
geom_hline(yintercept = 10)+
theme(axis.title = element_text(size=20, color = "black"),
axis.text = element_text(size=18, color = "black"))
ggplot(weather_clean_unique, aes(x=Date, y = Rad_PAR))+
geom_point()+
theme_classic
ggplot(weather_clean_unique, aes(x=Date, y = Rad_PAR))+
geom_point()+
theme_classic
ggplot(weather_clean_unique, aes(x=Date, y = Rad_PAR))+
geom_point()+
theme_classic()
ggplot(weather_clean_unique, aes(x=Date, y = Rad_Energy))+
geom_point()+
theme_classic()
max(weather_clean_unique$Rad_PAR)
